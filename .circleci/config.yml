version: 2.1

parameters:
  node-version:
    type: string
    default: '20.11.0'

  cypress-version:
    type: string
    default: '13.6.6'

commands:
  yarn-install:
    steps:
      - run: yarn install --immutable

  install-foundry:
    steps:
      - run:
          name: Install foundry used for cannon and e2e tests
          environment:
            SHELL: /bin/bash
          command: |-
            apt update && apt install --yes curl
            curl -L https://foundry.paradigm.xyz | bash
            export PATH="$PATH:$HOME/.foundry/bin"
            echo export PATH="$PATH:$HOME/.foundry/bin" > $BASH_ENV
            foundryup

jobs:
  test:
    docker:
      - image: cypress/included:<< pipeline.parameters.cypress-version >>
    steps:
      - checkout
      - yarn-install
      - run: yarn dedupe --check
      - run: yarn pretty:check
      - run: yarn codegen && git diff --exit-code
      - run: cypress run --component --browser chrome
      - store_artifacts:
          path: '.nyc_output'
          destination: 'coverage'
      - store_test_results:
          path: 'cypress/reports'
      - store_artifacts:
          path: 'cypress/screenshots'
      - store_artifacts:
          path: 'cypress/videos'

  e2e:
    parameters:
      chainId:
        type: integer
      preset:
        type: string
      rpc:
        type: string
      start:
        type: string
    docker:
      - image: cypress/included:<< pipeline.parameters.cypress-version >>
    environment:
      NODE_ENV: test
      CYPRESS_SYNTHETIX_PRESET: << parameters.preset >>
    steps:
      - install-foundry

      - run:
          name: Run anvil localhost:8545
          command: anvil --fork-url << parameters.rpc >>
          background: true

      - checkout

      - yarn-install

      - run:
          name: Run server localhost:3000
          environment:
            NODE_PORT: 3000
          command: << parameters.start >>
          background: true

      - run:
          name: Wait for server localhost:3000
          command: wget --retry-connrefused --waitretry=20 --read-timeout=20 --timeout=15 -t 10 http://localhost:3000

      - run:
          name: Wait for anvil localhost:8545
          command: wget -q -O - --retry-connrefused --waitretry=20 --read-timeout=20 --timeout=15 -t 10 --post-data='{"method":"eth_chainId","params":[],"id":1,"jsonrpc":"2.0"}' --header='Content-Type:application/json' http://localhost:8545

      - run:
          name: Install coverage reporter
          command: yarn add --dev cypress-circleci-reporter
      - run: |
          TEST_FILES=$(find ./cypress -regextype posix-extended -regex ".*[-.](cy|spec).(js|ts)")
          echo "$TEST_FILES" | circleci tests run --command="xargs cypress run --e2e --browser chrome --reporter cypress-circleci-reporter --spec" --verbose
      - store_artifacts:
          path: '.nyc_output'
          destination: 'coverage'

      - store_test_results:
          path: 'cypress/reports'
      - store_artifacts:
          path: 'cypress/screenshots'
      - store_artifacts:
          path: 'cypress/videos'

  combine-coverage:
    working_directory: /tmp/app
    docker:
      - image: cimg/node:<< pipeline.parameters.node-version >>
    steps:
      - checkout
      - yarn-install
      - run: rm -rf /tmp/cov
      - run: node .circleci/download-cci-coverage tests /tmp/cov || true
      - run: node .circleci/download-cci-coverage e2e-ethers-base-mainnet /tmp/cov || true
      - run: node .circleci/download-cci-coverage e2e-ethers-base-sepolia /tmp/cov || true
      - run: node .circleci/download-cci-coverage e2e-viem-base-mainnet /tmp/cov || true
      - run: node .circleci/download-cci-coverage e2e-viem-base-sepolia /tmp/cov || true

      - run: mkdir -p /tmp/cov
      - run: ls -alR /tmp/cov
      - run: mkdir -p /tmp/cov/combined
      - run: yarn nyc merge /tmp/cov /tmp/cov/combined/coverage.json || true

      - run: |-
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN} --file /tmp/cov/combined/coverage.json

workflows:
  version: 2.1

  tests:
    jobs:
      - test

      - e2e:
          name: 'e2e-ethers-base-mainnet'
          chainId: 8453
          preset: 'andromeda'
          rpc: 'https://mainnet.base.org'
          start: 'yarn start:ethers'

      - e2e:
          name: 'e2e-ethers-base-sepolia'
          chainId: 84532
          preset: 'andromeda'
          rpc: 'https://sepolia.base.org'
          start: 'yarn start:ethers'

      - e2e:
          name: 'e2e-viem-base-mainnet'
          chainId: 8453
          preset: 'andromeda'
          rpc: 'https://mainnet.base.org'
          start: 'yarn start:viem'

      - e2e:
          name: 'e2e-viem-base-sepolia'
          chainId: 84532
          preset: 'andromeda'
          rpc: 'https://sepolia.base.org'
          start: 'yarn start:viem'

      - combine-coverage:
          requires:
            - test
            - e2e-ethers-base-mainnet
            - e2e-ethers-base-sepolia
            - e2e-viem-base-mainnet
            - e2e-viem-base-sepolia
